# React Frontend

This project is a React-based frontend application that interacts with a backend API for user authentication and todo management.

## Project Structure

Here’s an overview of the project directory structure:

```
.
├── .DS_Store
├── .gitignore
├── frontend
│   ├── .gitignore
│   ├── README.md
│   ├── eslint.config.js
│   ├── index.html
│   ├── package-lock.json
│   ├── package.json
│   ├── public
│   │   └── vite.svg
│   ├── src
│   │   ├── App.css
│   │   ├── App.jsx
│   │   ├── assets
│   │   │   └── react.svg
│   │   ├── components
│   │   │   ├── Auth
│   │   │   │   ├── Login.jsx
│   │   │   │   └── Register.jsx
│   │   │   ├── Layout
│   │   │   │   └── Navbar.jsx
│   │   │   └── Todo
│   │   │       ├── Dashboard.jsx
│   │   │       ├── TodoEditModal.jsx
│   │   │       ├── TodoForm.jsx
│   │   │       ├── TodoItem.jsx
│   │   │       └── TodoList.jsx
│   │   ├── context
│   │   │   ├── auth
│   │   │   │   └── AuthContext.jsx
│   │   │   └── todo
│   │   │       └── TodoContext.jsx
│   │   ├── index.css
│   │   └── main.jsx
│   └── vite.config.js
└── server
    ├── .env
    ├── controllers
    │   ├── auth.controllers.js
    │   └── todo.controllers.js
    ├── index.js
    ├── models
    │   ├── todoModel.js
    │   └── userModel.js
    ├── package-lock.json
    ├── package.json
    ├── routes
    │   ├── auth.routes.js
    │   └── todo.routes.js
    └── utils
        ├── connect.js
        ├── error.js
        └── verify.js
```

## Features

- **Authentication**: User login and registration with Context API for state management.
- **Todo Management**: CRUD operations for todos with backend integration.
- **Routing**: Protected routes using React Router.
- **Responsive Layout**: Simple responsive UI with CSS.

## Installation

1. Clone the repository:

2. Navigate to the frontend directory:
   cd frontend, cd server

3. Install dependencies:
   npm install

4. Start the development server:
   npm run dev

## Technologies Used

- **Frontend**: React, React Router, Axios, Context API
- **Backend**: Node.js, Express, MongoDB
- **Styling**: CSS
